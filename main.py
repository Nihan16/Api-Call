from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
)
import re

# ржЖржкржирж╛рж░ ржмржЯ ржЯрзЛржХрзЗржи ржПржЦрж╛ржирзЗ ржжрж┐ржи
TOKEN = "8386739525:AAGkPaoULHOtrWLUYotmYRpzDjodz0jwV6M"

# рж╕рзЛрж░рзНрж╕ ржЧрзНрж░рзБржк ржПржмржВ ржмржЯрзЗрж░ ржЖржЗржбрж┐
SOURCE_CHAT_ID = -1002776669757
SOURCE_BOT_ID = 8338117097

# ржПржЗ ржбрж┐ржХрж╢ржирж╛рж░рж┐рждрзЗ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЪрзНржпрж╛ржЯ ржЖржЗржбрж┐ ржПржмржВ рждрж╛ржжрзЗрж░ ржжрзЗржУрзЯрж╛ ржлрзЛржи ржиржорзНржмрж░ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛ рж╣ржмрзЗ
user_data = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """/start ржХржорж╛ржирзНржбрзЗрж░ ржЬржирзНржп рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░"""
    user_id = update.effective_user.id
    user_data[user_id] = {"target_phone": None}
    await update.message.reply_text(
        "рж╕рзНржмрж╛ржЧрждржо! ржЖржкржирж┐ ржпрзЗ ржиржорзНржмрж░рзЗрж░ OTP ржкрзЗрждрзЗ ржЪрж╛ржи рж╕рзЗржЯрж┐ ржЖржорж╛ржХрзЗ ржорзЗрж╕рзЗржЬ ржмржХрзНрж╕рзЗ ржкрж╛ржарж╛ржиред\n"
        "ржЙржжрж╛рж╣рж░ржг: 93726556"
    )

async def set_phone_number(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """ржорзЗрж╕рзЗржЬ ржерзЗржХрзЗ ржлрзЛржи ржиржорзНржмрж░ ржирзЗржУрзЯрж╛рж░ ржЬржирзНржп рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░"""
    user_id = update.effective_user.id
    phone_number = update.message.text.strip()
    
    # ржлрзЛржи ржиржорзНржмрж░ржЯрж┐ ржПржХржЯрж┐ ржмрзИржз ржлрж░ржорзНржпрж╛ржЯрзЗ ржЖржЫрзЗ ржХрж┐ржирж╛ рждрж╛ ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛
    if re.match(r"^\d{8,12}$", phone_number): # ржЖржкржирж╛рж░ ржжрзЗрж╢рзЗрж░ ржлрзЛржи ржиржорзНржмрж░рзЗрж░ ржлрж░ржорзНржпрж╛ржЯ ржЕржирзБржпрж╛рзЯрзА рж░рзЗржЧрзБрж▓рж╛рж░ ржПржХрзНрж╕ржкрзНрж░рзЗрж╢ржиржЯрж┐ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ ржкрж╛рж░рзЗржи
        user_data[user_id]["target_phone"] = phone_number
        await update.message.reply_text(
            f"ржарж┐ржХ ржЖржЫрзЗ! ржЖржорж┐ ржПржЦржи ржПржЗ ржиржорзНржмрж░рзЗрж░ OTP ржЦрзБржБржЬржЫрж┐: {phone_number}\n"
            "OTP ржкрзЗрж▓рзЗ ржЖржорж┐ ржЖржкржирж╛ржХрзЗ ржЬрж╛ржирж┐рзЯрзЗ ржжрзЗржмред"
        )
    else:
        await update.message.reply_text(
            "ржПржЯрж┐ ржПржХржЯрж┐ ржмрзИржз ржлрзЛржи ржиржорзНржмрж░ ржирзЯред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ рж╕ржарж┐ржХ ржлрзЛржи ржиржорзНржмрж░ржЯрж┐ ржкрж╛ржарж╛ржиред"
        )


async def forward_otp(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """рж╕рзЛрж░рзНрж╕ ржЧрзНрж░рзБржк ржерзЗржХрзЗ OTP ржЦрзБржБржЬрзЗ ржлрж░рзЛржпрж╝рж╛рж░рзНржб ржХрж░рж╛рж░ ржЬржирзНржп рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░"""
    message = update.effective_message

    # ржорзЗрж╕рзЗржЬржЯрж┐ рж╕ржарж┐ржХ ржмржЯ ржПржмржВ ржЧрзНрж░рзБржк ржерзЗржХрзЗ ржПрж╕рзЗржЫрзЗ ржХрж┐ржирж╛ рждрж╛ ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛
    if message.from_user.id == SOURCE_BOT_ID and message.chat.id == SOURCE_CHAT_ID:
        
        message_text = message.text
        
        # ржкрзНрж░рждрж┐ржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЬржирзНржп рждрж╛ржжрзЗрж░ рж╕рзЗржЯ ржХрж░рж╛ ржлрзЛржи ржиржорзНржмрж░ржЯрж┐ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛
        for user_id, data in user_data.items():
            target_phone = data["target_phone"]
            if target_phone:
                
                # рж░рзЗржЧрзБрж▓рж╛рж░ ржПржХрзНрж╕ржкрзНрж░рзЗрж╢ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржорзЗрж╕рзЗржЬрзЗ ржлрзЛржи ржиржорзНржмрж░ ржПржмржВ ржХрзЛржб ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛
                # ржЖржкржирж╛рж░ ржжрзЗржУрзЯрж╛ ржлрж░ржорзНржпрж╛ржЯ ржЕржирзБржпрж╛рзЯрзА ржкрзНржпрж╛ржЯрж╛рж░рзНржиржЯрж┐ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
                # ржкрзНржпрж╛ржЯрж╛рж░рзНржи: ЁЯМР Country : ... тШО Number : ... ЁЯФР Code : ...
                pattern = r"тШО Number : .*?" + re.escape(target_phone) + r".*\n.*ЁЯФР Code : (\d+)"
                match = re.search(pattern, message_text, re.DOTALL)

                if match:
                    extracted_code = match.group(1)
                    
                    # ржпржжрж┐ ржХрзЛржбржЯрж┐ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯ, рждрж╛рж╣рж▓рзЗ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржлрж░рзЛржпрж╝рж╛рж░рзНржб ржХрж░рж╛
                    await context.bot.send_message(
                        chat_id=user_id,
                        text=f"ржЖржкржирж╛рж░ ржиржорзНржмрж░рзЗрж░ ({target_phone}) OTP ржХрзЛржбржЯрж┐ рж╣рж▓рзЛ: {extracted_code}"
                    )
                    
                    # ржПржХржмрж╛рж░ ржХрзЛржб ржлрж░рзЛржпрж╝рж╛рж░рзНржб ржХрж░рж╛рж░ ржкрж░ ржиржорзНржмрж░ржЯрж┐ рж░рж┐рж╕рзЗржЯ ржХрж░рж╛
                    user_data[user_id]["target_phone"] = None
                    await context.bot.send_message(
                        chat_id=user_id,
                        text="OTP ржлрж░рзЛрзЯрж╛рж░рзНржб ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред ржЖржкржирж┐ ржпржжрж┐ ржЕржирзНржп ржХрзЛржирзЛ ржиржорзНржмрж░рзЗрж░ ржЬржирзНржп OTP ржкрзЗрждрзЗ ржЪрж╛ржи, рждрж╛рж╣рж▓рзЗ ржирждрзБржи ржиржорзНржмрж░ржЯрж┐ ржкрж╛ржарж╛ржиред"
                    )
                    break # рж▓рзБржк ржерзЗржХрзЗ ржмрзЗрж░ рж╣рзЯрзЗ ржпрж╛ржУрзЯрж╛ ржХрж╛рж░ржг ржХрзЛржб ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗ

def main() -> None:
    """ржмржЯ ржЪрж╛рж▓рзБ ржХрж░рж╛рж░ ржЬржирзНржп ржкрзНрж░ржзрж╛ржи ржлрж╛ржВрж╢ржи"""
    application = Application.builder().token(TOKEN).build()

    # ржХржорж╛ржирзНржб рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
    application.add_handler(CommandHandler("start", start))
    
    # ржорзЗрж╕рзЗржЬ рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, set_phone_number))
    
    # рж╕рзЛрж░рзНрж╕ ржЧрзНрж░рзБржк ржерзЗржХрзЗ ржЖрж╕рж╛ ржорзЗрж╕рзЗржЬ рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
    application.add_handler(MessageHandler(filters.UpdateType.MESSAGES, forward_otp, block=False))
    
    # ржмржЯ ржЪрж╛рж▓рзБ ржХрж░рж╛
    print("ржмржЯржЯрж┐ ржЪрж╛рж▓рзБ рж╣ржпрж╝рзЗржЫрзЗред ржЖржкржирж╛рж░ ржорзЗрж╕рзЗржЬ ржмржХрзНрж╕рзЗ ржлрзЛржи ржиржорзНржмрж░ ржкрж╛ржарж┐рзЯрзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред")
    application.run_polling(allowed_updates=[Update.MESSAGE, Update.CHANNEL_POST])

if __name__ == "__main__":
    main()

